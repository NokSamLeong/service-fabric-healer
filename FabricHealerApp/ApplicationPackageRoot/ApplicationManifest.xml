<?xml version="1.0" encoding="utf-8"?>
<ApplicationManifest xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ApplicationTypeName="FabricHealerType" ApplicationTypeVersion="1.0.14" xmlns="http://schemas.microsoft.com/2011/01/fabric">
  <Parameters>
    <Parameter Name="FabricHealer_InstanceCount" DefaultValue="-1" />
    <!-- FabricHealerManager Settings  -->
    <Parameter Name="AutoMitigationEnabled" DefaultValue="true" />
    <Parameter Name="EventSourceProviderEnabled" DefaultValue="true" />
    <Parameter Name="MonitorLoopSleepSeconds" DefaultValue="5" />
    <Parameter Name="TelemetryProviderEnabled" DefaultValue="true" />
    <!-- Set VerboseLoggingEnabled to true if you want detailed local logging and telemetry/ETW with repair data. 
         This data will live in a folder named RepairData, which will be created in your LocalLogPath directory.
         Default is true. This is not noisy. Keep this enabled if you want a record of repair workflow steps. -->
    <Parameter Name="VerboseLoggingEnabled" DefaultValue="true" />
    <Parameter Name="OperationalTelemetryEnabled" DefaultValue="true" />
    <Parameter Name="LocalLogPath" DefaultValue="fabric_healer_logs" />
    <!-- Repair Policy Enablement -->
    <Parameter Name="EnableAppRepair" DefaultValue="true" />
    <Parameter Name="EnableDiskRepair" DefaultValue="false" />
    <Parameter Name="EnableNodeRepair" DefaultValue="false" />
    <Parameter Name="EnableReplicaRepair" DefaultValue="false" />
    <Parameter Name="EnableSystemAppRepair" DefaultValue="false" />
    <Parameter Name="EnableVMRepair" DefaultValue="false" />
  </Parameters>
  <!-- Import the ServiceManifest from the ServicePackage. The ServiceManifestName and ServiceManifestVersion 
       should match the Name and Version attributes of the ServiceManifest element defined in the 
       ServiceManifest.xml file. -->
  <ServiceManifestImport>
    <ServiceManifestRef ServiceManifestName="FabricHealerPkg" ServiceManifestVersion="1.0.14" />
    <ConfigOverrides>
      <ConfigOverride Name="Config">
        <Settings>
          <!-- FabricHealerManager -->
          <Section Name="RepairManagerConfiguration">
            <Parameter Name="HealthCheckLoopSleepTimeSeconds" Value="[MonitorLoopSleepSeconds]" />
            <Parameter Name="EnableAutoMitigation" Value="[AutoMitigationEnabled]" />
            <Parameter Name="EnableEventSourceProvider" Value="[EventSourceProviderEnabled]" />
            <Parameter Name="EnableTelemetryProvider" Value="[TelemetryProviderEnabled]" />
            <Parameter Name="EnableVerboseLogging" Value="[VerboseLoggingEnabled]" />
            <Parameter Name="EnableOperationalTelemetry" Value="[OperationalTelemetryEnabled]" />
            <Parameter Name="LocalLogPath" Value="[LocalLogPath]" />
          </Section>
          <!-- Repair policies -->
          <Section Name="AppRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableAppRepair]" />
          </Section>
          <Section Name="DiskRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableDiskRepair]" />
          </Section>
          <Section Name="FabricNodeRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableNodeRepair]" />
          </Section>
          <Section Name="ReplicaRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableReplicaRepair]" />
          </Section>
          <Section Name="SystemAppRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableSystemAppRepair]" />
          </Section>
          <Section Name="VMRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableVMRepair]" />
          </Section>
        </Settings>
      </ConfigOverride>
    </ConfigOverrides>
    <Policies>
      <RunAsPolicy CodePackageRef="Code" UserRef="SystemUser" />
    </Policies>
  </ServiceManifestImport>
  <DefaultServices>
    <!-- The section below creates instances of service types, when an instance of this 
         application type is created. You can also create one or more instances of service type using the 
         ServiceFabric PowerShell module.
         
         The attribute ServiceTypeName below must match the name defined in the imported ServiceManifest.xml file. -->
    <Service Name="FabricHealer" ServicePackageActivationMode="ExclusiveProcess">
      <StatelessService ServiceTypeName="FabricHealerType" InstanceCount="[FabricHealer_InstanceCount]">
        <SingletonPartition />
      </StatelessService>
    </Service>
  </DefaultServices>
  <!-- Because of the actions FabricHealer takes in a cluster, it must run as Admin user on Windows and root on Linux. 
       LocalSystem AccountType maps to System on Windows and root on Linux. -->
  <Principals>
    <Users>
      <User Name="SystemUser" AccountType="LocalSystem" />
    </Users>
  </Principals>
</ApplicationManifest>